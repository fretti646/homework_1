# –ü—Ä–∞–∫—Ç–∏–∫–∞:

# –§–∞–π–ª log_100.json:
# 1) —á–µ–º—É —Ä–∞–≤–µ–Ω –æ–±—â–∏–π –≤–∫–ª–∞–¥ —Ç–æ–ø-3 –≤—Å–µ—Ö IP –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ—Å–µ—â–µ–Ω–∏–π? –£–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º
# 2) —Å–∫–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö IP, —Å –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞ —Å–∞–π—Ç –∑–∞—Ö–æ–¥–∏–ª–∏ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑


import json

lst_ip = []
with open('log_100.json') as f:
	j = json.load(f)
for elem in j:
	lst_ip.append(elem['ip'])
d = {}
for i in lst_ip:
	if not(i in d):
		d[i] = 1
	else:
		d[i] += 1
lst_count = []
for value in d.values():
	lst_count.append(value)
lst_count = sorted(lst_count)
count_t_1 = 0
lst_count_top_3 = lst_count[len(lst_count)- 3: ]
summ_top_3 = sum(lst_count_top_3)
count = sum(lst_count)
for elem in lst_count:
	if elem == 1:
		count_t_1 += 1

print('—Å—Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö IP, —Å –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞ —Å–∞–π—Ç –∑–∞—Ö–æ–¥–∏–ª–∏ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑:', count_t_1)
print('–æ–±—â–∏–π –≤–∫–ª–∞–¥ —Ç–æ–ø-3 –≤—Å–µ—Ö IP –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ—Å–µ—â–µ–Ω–∏–π, %:', summ_top_3 *  100 / count)


# –§–∞–π–ª log_full.csv:
# 5) –Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–π—Å—è IP
# 6) –ø–æ—Å—á–∏—Ç–∞—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –≤–∫–ª–∞–¥ —ç—Ç–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞ –≤ –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ 
# 7) –Ω–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥–∞—Ö —Å —ç—Ç–∏–º IP –∏ –≤—ã—è—Å–Ω–∏—Ç—å –∫–∞–∫–æ–π user-agent –±—ã–ª —É —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏
# –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å:

# suspicious_agent = {
#     "ip": '...',            # —Å–∞–º—ã–π —á–∞—Å—Ç–æ–≤—Å—Ç—Ä–µ—á–∞–µ–º—ã–π ip –≤ –ª–æ–≥–∞—Ö
#     'fraction': 70.205,     # –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–∞–∫–∏–º ip –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
#     'count': 29427,         # —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–∞–∫–∏–º IP
#     'last': {               # –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å 2-–º—è –ø–æ–ª—è–º–∏
#         'agent': '...',     # –ø–æ—Å–ª–µ–¥–Ω–∏–π user-agent –¥–ª—è —ç—Ç–æ–≥–æ ip
#         'timestamp': '...', # –ø–æ—Å–ª–µ–¥–Ω–∏–π timestap –¥–ª—è —ç—Ç–æ–≥–æ ip
#     }
# }

# –∑–∞–ø–∏—Å—å
# with open('test.csv', 'a') as f:
#     writer = csv.writer(f)
#     writer.writerows(rows)

# —á—Ç–µ–Ω–∏–µ:
# rows = []
# with open('test.csv') as f:
#     reader = csv.reader(f)
#     for row in reader:
#         rows.append(row)
#         print(row)
# print(rows)


import csv

OBOBOBrows = [] #—Å—Ç—Ä–æ–∫–∏ 
with open ('log_full.csv') as f:
	readed = csv.reader(f) # –ø–µ—Ä–µ–≤–µ–ª–∏ csv –≤ –æ–±—ä–µ–∫—Ç –ø–∏—Ç–æ–Ω–∞
OBOBOB	for row in readed:
		 rows.append(row)
OBOBOB
OBOBOBrows_0 = rows[0]
rows_1_and = rows[1:]
OBOBOBOBOBOBlst_ip = []
OBOBOB
OBOBOBfor i in range(len(rows_1_and)):
	lst_ip.append(rows_1_and[i][1])
OBOBOB
OBOBOBd1 = {}
for i in lst_ip:
	if not (i in d1):
OBOBOB		d1[i] = 1
	else:
		d1[i] += 1

lst_count = []
for value in d1.values():
	lst_count.append(value)

lst_count = sorted(lst_count) # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞
count = sum(lst_count) # —Å—É–º–º–∞ –≤—Å–µ—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π
max_times = max(lst_count) # –º–∞–∫—Å —á–∏—Å–ª–æ –ø–æ—Å–µ—â–µ–Ω–∏–π –æ–¥–Ω–æ–≥–æ –∞–π–ø–∏

for key, value in d1.items(): # –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–µ–≥–∞—Ç—å –ø–æ –∫–ª—é—á—É –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
	if value == max_times: # —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ—Å–µ—â–µ–Ω–∏–π
		max_ip = key # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∞–π–ø–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–π
		break # –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫ –≤—Å–µ –Ω–∞—à–ª–∏

procent = (max_times * 100 / count, 3)

lst_max_ip = []
for i in range(len(rows_1_and)):
	if rows_1_and[i][1] == max_ip:
		lst_max_ip.append(rows_1_and[i]) # –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º –∞–π–ø–∏

last = {				# –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å 2-–º—è –ø–æ–ª—è–º–∏
rows_0[2]:lst_max_ip[len(lst_max_ip) - 1][2],	# –ø–æ—Å–ª–µ–¥–Ω–∏–π user-agent –¥–ª—è —ç—Ç–æ–≥–æ ip
rows_0[0]:lst_max_ip[len(lst_max_ip) - 1][0]		# –ø–æ—Å–ª–µ–¥–Ω–∏–π timestap –¥–ª—è —ç—Ç–æ–≥–æ ip
}

suspicious_agent = {
    "ip": max_ip,            # —Å–∞–º—ã–π —á–∞—Å—Ç–æ–≤—Å—Ç—Ä–µ—á–∞–µ–º—ã–π ip –≤ –ª–æ–≥–∞—Ö
    'fraction': procent,     # –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–∞–∫–∏–º ip –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    'count': max_times,         # —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–∞–∫–∏–º IP
    'last': last
}

print(suspicious_agent)







